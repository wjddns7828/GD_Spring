<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.min.edu</groupId>
  <artifactId>Spring012_Spring_SPA</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>Spring012_Spring_SPA Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <!-- xml에서 사용하는 공통적인 변수를 tag로 호출할 수 있도록함. EL방식 -->
  <properties>
		<java-version>17</java-version>
		<org.springframework-version>5.3.20</org.springframework-version>
		<org.aspectj-version>1.9.9.1</org.aspectj-version>
		<org.slf4j-version>2.0.4</org.slf4j-version>
  </properties>
  
  <!-- dependency를 찾기 위한 2차 검색 저장소 -->
  <repositories>
  	<repository>
  		<id>local_repository</id>
  		<name>local repository</name>
  		<url>file://${project.basedir}/repository</url>
  	</repository>
  </repositories>
  
  <dependencies>
  	<!-- 사용자 라이브러리 groupId는 물리적 폴더, artifactId는 파일(-version) -->
  	<dependency>
    	<groupId>com.spring.util</groupId>
    	<artifactId>servletAlert0.0.1</artifactId>
    	<version>1.0</version>
    </dependency>
    
     <!-- Spring 관련 Core, MVC 개발에 필요한 라이브러리 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- 의존적 관계 중에서 exclusion을 하면 의존하지 않고 제외한다 -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		
		<!-- Spring MVC 개발에 stereotype인 @Controller @Service @Repository의 Annotation동작 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		
		<!-- TODO 02_01 로그처리를 위한 logback 라이브러리 -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>1.4.5</version>
		</dependency>

		<!-- 로그처리를 자동으로 해주는 라이브러리 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
    
    	<!-- 생성된 Bean을 DI할 때 사용할 수 있는 @Inject를 제공해 준다. 지금은 사용하지 않는다 -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		
		<!-- Servlet은 tomcat이 가지고 있는 라이브러리. scope를 provide로 하면 실행할 때는 maven을 사용하고 배포했을 경우 배포서버의 라이브러리를 사용. -->
		<!-- Spring 4.x 이상에서는 javax-servlet-api를 4.0.1로 변경해서 사용해야 한다 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
		</dependency>
		
		<!-- java standard tag library JSP에서 java를 Tag형식으로 사용할 수 있도록 함 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- 사용자 Filter에서 문자열을 쉽게 처리하기 위한 라이브러리 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.12.0</version>
		</dependency>
		
		<!-- 오라클 접속 드라이버 -->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc10</artifactId>
		    <version>19.17.0.0</version>
		</dependency>

		<!-- mybatis 라이브러리 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.5.6</version>
		</dependency>
		
		<!-- database connect property db접속 정보인 Property 파일을 bean으로 생성하기 위한 라이브러리 -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>1.4</version>
		</dependency>
		
		<!-- Spring에서 mybatis bean을 사용하기 위한 라이브러리 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>2.0.6</version>
		</dependency>
		
		<!-- Spring ORM을 통해서 Transaction 처리 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-orm</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.24</version>
		</dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		
		<!-- JUnit과 Spring을 같이 동작시키기 위한 라이브러리 -->  
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- AOP 처리를 위한 aspect, weaving 처리 -->
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjrt</artifactId>
		    <version>${org.aspectj-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjweaver</artifactId>
		    <version>${org.aspectj-version}</version>
		</dependency>
		
		<!-- JSON 생성을 위한 라이브러리 -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.8.9</version>
		</dependency>
		
		<!-- 메일 Send Message Transfer Protocol -->
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4.7</version>
		</dependency>
		
		<!-- Spring에서 SMTP를 bean으로 처리하기 위한 라이브러리 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-support</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- 파일 업로드 라이브러리 -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.5</version>
		</dependency>
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.11.0</version>
		</dependency>
		
		<!-- Spring RestFull 서비스를 처리하기 위한 JSON 자동반환 -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.14.2</version>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-mapper-asl</artifactId>
		    <version>1.9.13</version>
		</dependency>
		
		<!-- Spring 유효성 검사, 국제화 코드 -->
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>6.0.1.Final</version>
		</dependency>
		
		<!-- Spring을 웹소켓 서버를 구성하기 위한 라이브러리 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-websocket</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
		    <groupId>javax.websocket</groupId>
		    <artifactId>javax.websocket-api</artifactId>
		    <version>1.1</version>
		    <scope>provided</scope>
		</dependency>
		
		<!-- TODO 06_01 datasource 객체를 위한 HikariCP 라이브러리 Datasource 객체를 생성 -->
		<dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		    <version>4.0.3</version>
		</dependency>
		
  </dependencies>
  <build>
    <finalName>Spring012_Spring_SPA</finalName>
    <plugins>
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    		<artifactId>maven-compiler-plugin</artifactId>
    		 <version>3.10.1</version>
    		 <configuration>
    		 	<source>17</source>
    		 	<target>17</target>
    		 </configuration>
    	</plugin>
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    		<artifactId>maven-war-plugin</artifactId>
    		 <version>3.3.2</version>
    	</plugin>
    </plugins>
  </build>
</project>
